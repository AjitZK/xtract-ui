{"version":3,"sources":["assets/XtractIcon.png","assets/fillForm.svg","assets/getAccount.svg","assets/uploadDoc.svg","utils/StateProvider.js","utils/FileContextProvider.js","utils/useFileHandler.js","scenes/SelectScene/components/FileInput.js","scenes/SelectScene/components/FileUpload.js","constants/FileConstants.js","scenes/SelectScene/SelectScene.js","scenes/SelectScene/components/HeaderComponent.js","scenes/SelectScene/components/FooterComponent.js","scenes/SelectScene/components/TutorialComponent.js","scenes/Main/Main.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","FileContext","FileContextProvider","useFileContextState","useContext","api","timeout","Promise","resolve","setTimeout","useFileHandler","files","pending","next","uploading","uploaded","status","dispatch","onSubmit","useCallback","e","preventDefault","length","console","log","type","window","alert","useEffect","countRef","useRef","then","prev","num","color","msg","style","logUploadedFile","current","slice","nextPending","catch","error","onChange","target","newFiles","Array","from","map","file","index","id","src","URL","createObjectURL","allFiles","concat","FileInput","props","className","accept","name","multiple","FileUpload","opacity","key","alt","SelectScene","state","action","uploadError","HeaderComponent","XtractIcon","Component","FooterComponent","TutorialComponent","fillForm","uploadDoc","getAccount","Main","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.baf443c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/XtractIcon.c7c317d8.png\";","module.exports = __webpack_public_path__ + \"static/media/fillForm.a742235e.svg\";","module.exports = __webpack_public_path__ + \"static/media/getAccount.106864a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/uploadDoc.1b510958.svg\";","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useGlobalState = () => useContext(StateContext);\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const FileContext = createContext();\n\nexport const FileContextProvider = ({ reducer, initialState, children }) => (\n  <FileContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </FileContext.Provider>\n);\n\nexport const useFileContextState = () => useContext(FileContext);\n","import { useCallback, useEffect, useReducer, useRef } from \"react\";\nimport { useFileContextState } from \"./FileContextProvider\";\n\nconst api = {\n  uploadFile({ timeout = 550 }) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, timeout);\n    });\n  }\n};\n\nconst logUploadedFile = (num, color = \"green\") => {\n  const msg = `%cUploaded ${num} files.`;\n  const style = `color:${color};font-weight:bold;`;\n  console.log(msg, style);\n};\n\nconst useFileHandler = () => {\n  const [\n    { files, pending, next, uploading, uploaded, status },\n    dispatch\n  ] = useFileContextState();\n\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (files.length) {\n        console.log(\"submit is called\", files);\n        dispatch({ type: \"submit\" });\n      } else {\n        window.alert(\"You don't have any files loaded.\");\n      }\n    },\n    [files.length]\n  );\n\n  const onChange = e => {\n    if (e.target.files.length) {\n      const arrNewFiles = Array.from(e.target.files);\n      const newFiles = arrNewFiles.map((file, index) => {\n        const src = window.URL.createObjectURL(file);\n        return { file, id: index, src };\n      });\n      const allFiles = files.concat(newFiles);\n      console.log(\"allFiles\", allFiles);\n      dispatch({ type: \"load\", files: allFiles });\n    }\n  };\n\n  // Sets the next file when it detects that its ready to go\n  useEffect(() => {\n    if (pending.length && next == null) {\n      const next = pending[0];\n      console.log(\"next\", next);\n      dispatch({ type: \"next\", next });\n    }\n  }, [next, pending]);\n\n  const countRef = useRef(0);\n\n  // Processes the next pending thumbnail when ready\n  useEffect(() => {\n    if (pending.length && next) {\n      api\n        .uploadFile(next)\n        .then(() => {\n          const prev = next;\n          logUploadedFile(++countRef.current);\n          console.log(\"process next file\", prev, pending.slice(1));\n          const nextPending = pending.slice(1);\n          dispatch({ type: \"file-uploaded\", prev, pending: nextPending });\n        })\n        .catch(error => {\n          console.error(error);\n          dispatch({ type: \"set-upload-error\", error });\n        });\n    }\n  }, [files, pending, next, uploading, uploaded, status]);\n\n  // Ends the upload process\n  useEffect(() => {\n    if (!pending.length && uploading) {\n      console.log(\"files are uploaded\");\n      dispatch({ type: \"files-uploaded\" });\n    }\n  }, [pending.length, uploading]);\n\n  return {\n    onSubmit,\n    onChange\n  };\n};\n\nexport default useFileHandler;\n","import React from \"react\";\n\nconst FileInput = props => (\n  <div className=\"File-Input-Component\">\n    <input\n      // style={{background: 'blue'}}\n      className=\"\"\n      type=\"file\"\n      accept=\"image/*\"\n      name=\"img-loader-input\"\n      multiple\n      {...props}\n    />\n    <button className=\"Choose-Files-Button\">Choose File</button>\n  </div>\n);\n\nexport default FileInput;\n","import React from \"react\";\nimport useFileHandler from \"../../../utils/useFileHandler\";\nimport FileInput from \"./FileInput\";\nimport { useFileContextState } from \"src/utils/FileContextProvider\";\nimport {\n  LOADED,\n  INIT,\n  PENDING,\n  FILES_UPLOADED,\n  UPLOAD_ERROR\n} from \"../../../constants/FileConstants\";\n\nconst FileUpload = () => {\n  const { onSubmit, onChange } = useFileHandler();\n\n  const [\n    { files, pending, next, uploading, uploaded, status }\n  ] = useFileContextState();\n\n  return (\n    <div className=\"container\">\n      <form className=\"form\" onSubmit={onSubmit}>\n        {status === FILES_UPLOADED && (\n          <div className=\"success-container\">\n            <div>\n              <h2>Congratulations!</h2>\n              <small>You uploaded your files. Get some rest.</small>\n            </div>\n          </div>\n        )}\n        <div className=\"Button-Group\">\n          <FileInput onChange={onChange} />\n          <button type=\"submit\" className=\"Submit-Button\">\n            Submit\n          </button>\n        </div>\n        <div>\n          {files.map(({ file, src, id }, index) => (\n            <div\n              style={{\n                opacity: uploaded[id] ? 0.2 : 1\n              }}\n              key={`thumb${index}`}\n              className=\"thumbnail-wrapper\"\n            >\n              <img className=\"thumbnail\" src={src} alt=\"\" />\n              <div className=\"thumbnail-caption\">{file.name}</div>\n            </div>\n          ))}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default FileUpload;\n","// export constants\nexport const LOADED = \"LOADED\";\nexport const INIT = \"INIT\";\nexport const PENDING = \"PENDING\";\nexport const FILES_UPLOADED = \"FILES_UPLOADED\";\nexport const UPLOAD_ERROR = \"UPLOAD_ERROR\";\n","import React from \"react\";\nimport \"./SelectScene.css\";\nimport { FileContextProvider } from \"../../utils/FileContextProvider\";\nimport FileUpload from \"./components/FileUpload\";\nimport {\n  LOADED,\n  INIT,\n  PENDING,\n  FILES_UPLOADED,\n  UPLOAD_ERROR\n} from \"../../constants/FileConstants\";\n\nconst SelectScene = () => {\n  const initialState = {\n    files: [],\n    pending: [],\n    next: null,\n    uploading: false,\n    uploaded: {},\n    status: \"idle\"\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"load\":\n        return { ...state, files: action.files, status: LOADED };\n      case \"submit\":\n        return {\n          ...state,\n          uploading: true,\n          pending: state.files,\n          status: INIT\n        };\n      case \"next\":\n        return {\n          ...state,\n          next: action.next,\n          status: PENDING\n        };\n      case \"file-uploaded\":\n        return {\n          ...state,\n          next: null,\n          pending: action.pending,\n          uploaded: {\n            ...state.uploaded,\n            [action.prev.id]: action.prev.file\n          }\n        };\n      case \"files-uploaded\":\n        return { ...state, uploading: false, status: FILES_UPLOADED };\n      case \"set-upload-error\":\n        return { ...state, uploadError: action.error, status: UPLOAD_ERROR };\n      default:\n        return state;\n    }\n  };\n\n  return (\n    <FileContextProvider initialState={initialState} reducer={reducer}>\n      <FileUpload />\n    </FileContextProvider>\n  );\n};\n\nexport default SelectScene;\n","import React, { Component } from \"react\";\nimport XtractIcon from \"../../../assets/XtractIcon.png\";\n\nclass HeaderComponent extends Component {\n  render() {\n    return (\n        <div className=\"Header-component\">\n          <img className=\"App-icon\" src={XtractIcon} />\n          <div className=\"App-title\">Xtract</div>\n          <div className=\"\"></div>\n        </div>\n    );\n  }\n}\n\nexport default HeaderComponent;\n","import React, { Component } from \"react\";\n\nclass FooterComponent extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"\">\n          <div className=\"\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FooterComponent;\n","import React, { Component } from 'react';\nimport fillForm from \"../../../assets/fillForm.svg\";\nimport getAccount from \"../../../assets/getAccount.svg\";\nimport uploadDoc from \"../../../assets/uploadDoc.svg\";\nexport class TutorialComponent extends Component {\n    render() {\n        return (\n            <div>\n            <div className=\"Tutorial\">\n                <img className=\"Tutorial-Step Fill-Form\" src={fillForm} />\n                <i className=\"fas fa-plus-circle Tutorial-Flow\"></i>\n                <img className=\"Tutorial-Step Upload-Doc\" src={uploadDoc} />\n                <i className=\"fas fa-arrow-circle-right Tutorial-Flow\"></i>\n                <img className=\"Tutorial-Step Get-Account\" src={getAccount} />\n            </div>\n            <div className=\"Tutorial-Description\">\n                <div className=\"Description Describe1\">Fill in the Form</div>\n                <div className=\"Description Describe2\">Upload your Documentation</div>\n                <div className=\"Description Describe3\">Get an Account</div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default TutorialComponent;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SelectScene from \"../SelectScene/SelectScene\";\nimport HeaderComponent from \"../SelectScene/components/HeaderComponent\";\nimport FooterComponent from \"../SelectScene/components/FooterComponent\";\nimport TutorialComponent from \"../SelectScene/components/TutorialComponent\";\n\nexport default function Main() {\n  return (\n    <div>\n      <div className=\"background\">\n        </div>\n      <Route>\n        <Switch>\n          <Route path=\"/\">\n            <HeaderComponent />\n            <TutorialComponent />\n            <SelectScene />\n            <FooterComponent />\n          </Route>\n        </Switch>\n      </Route>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { StateProvider } from \"./utils/StateProvider\";\nimport \"./App.css\";\n\nimport Main from \"./scenes/Main/Main\";\n\nexport default function App() {\n  const initialState = {};\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      default:\n        return state;\n    }\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n    </StateProvider>\n  );\n}\n"],"sourceRoot":""}